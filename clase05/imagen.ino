#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Definir tamaño del display
#define ANCHO_PANTALLA 128
#define ALTO_PANTALLA 64

// Dirección I2C típica (0x3C o 0x3D)
#define OLED_ADDR 0x3C  

// Crear objeto display
Adafruit_SSD1306 display(ANCHO_PANTALLA, ALTO_PANTALLA, &Wire);

// 'amogus', 500x500px
// 'amogus', 128x64px
// 'profe', 128x64px
const unsigned char epd_bitmap_profe [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xfe, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x6d, 0xb6, 0xdb, 0x6d, 0xb7, 0x7d, 0xdd, 0xde, 0xf7, 0xbf, 0xf7, 0xbd, 0xef, 0x76, 0xdb, 0x6d, 
	0xf7, 0xff, 0xff, 0xff, 0xfd, 0xef, 0x7f, 0x7b, 0xde, 0xf6, 0xde, 0xf7, 0xbd, 0xff, 0xff, 0xff, 
	0xbe, 0xdb, 0x6d, 0xb6, 0xdf, 0xbf, 0xf7, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x6d, 0xb6, 
	0xef, 0xff, 0xff, 0xff, 0xf6, 0xf7, 0xdf, 0xef, 0xf7, 0x6f, 0xfd, 0xef, 0x7b, 0xfb, 0xff, 0xff, 
	0xfb, 0x6d, 0xb6, 0xdb, 0x7f, 0xfd, 0xfd, 0xbb, 0x90, 0x7b, 0x6f, 0xff, 0xef, 0xbf, 0xf7, 0xdf, 
	0x6f, 0xff, 0xff, 0xff, 0xdb, 0xdf, 0xbf, 0xf0, 0x00, 0x07, 0xff, 0xbd, 0xff, 0xf7, 0x7e, 0xfb, 
	0xfd, 0xb6, 0xdb, 0x6d, 0xff, 0x7e, 0xf6, 0xc0, 0x00, 0x02, 0xf7, 0xf7, 0xde, 0xff, 0xdf, 0xef, 
	0x9f, 0xff, 0xff, 0xff, 0x6d, 0xf7, 0xfe, 0x00, 0x00, 0x00, 0x3e, 0xff, 0xff, 0xee, 0xfb, 0x7e, 
	0xf6, 0xdb, 0x6d, 0xb7, 0xff, 0xdf, 0xd8, 0x01, 0xbf, 0x90, 0x3f, 0xef, 0x7b, 0xff, 0xef, 0xff, 
	0xff, 0xff, 0xff, 0xfd, 0xb7, 0xfd, 0xf0, 0x04, 0xa4, 0xd0, 0x1b, 0xff, 0xff, 0x77, 0x7f, 0xed, 
	0xbb, 0x6d, 0xb6, 0xdf, 0xfe, 0xf7, 0x60, 0x06, 0x6d, 0x6c, 0x0f, 0xbd, 0xef, 0xdf, 0xfd, 0xbf, 
	0xef, 0xff, 0xff, 0xf6, 0xdf, 0xbf, 0xc0, 0x13, 0x1b, 0x26, 0x0d, 0xff, 0xfe, 0xfd, 0xef, 0xff, 
	0x7d, 0xb6, 0xdb, 0x7f, 0xf7, 0xfe, 0x80, 0x10, 0xd2, 0xd2, 0x07, 0xf7, 0xbf, 0xff, 0xbe, 0xf7, 
	0xdf, 0xff, 0xff, 0xdb, 0x7d, 0xf7, 0x80, 0x00, 0x24, 0x18, 0x07, 0xbf, 0xfb, 0xee, 0xff, 0xfe, 
	0xf6, 0xdb, 0x6d, 0xff, 0xef, 0xbf, 0x00, 0x20, 0x00, 0x82, 0x07, 0xfe, 0xff, 0xbf, 0xf7, 0xdf, 
	0xbf, 0xff, 0xff, 0x6d, 0xbe, 0xfb, 0x80, 0x84, 0x60, 0x24, 0x83, 0x7b, 0xef, 0xfb, 0xde, 0xfd, 
	0xed, 0xb6, 0xdb, 0xff, 0xff, 0xfe, 0x82, 0x11, 0x24, 0x98, 0x03, 0xff, 0xfe, 0xff, 0xff, 0xef, 
	0x7f, 0xff, 0xfe, 0xdb, 0xf7, 0xdf, 0x82, 0x48, 0xd3, 0x08, 0x03, 0xef, 0xbf, 0xef, 0x7b, 0x7f, 
	0xdb, 0x6d, 0xb7, 0xfe, 0xde, 0xff, 0x04, 0x92, 0x52, 0x66, 0x03, 0xfe, 0xfb, 0xfd, 0xef, 0xf7, 
	0xff, 0xff, 0xfd, 0xb7, 0xff, 0xec, 0x04, 0x20, 0x04, 0xb0, 0x03, 0xbf, 0xff, 0xbf, 0xff, 0xfe, 
	0xed, 0xb6, 0xdf, 0xff, 0x7b, 0xb2, 0x01, 0x24, 0x9c, 0x99, 0x03, 0xfb, 0xf7, 0xfb, 0xbd, 0xbf, 
	0xbf, 0xff, 0xf7, 0x6f, 0xef, 0xf0, 0x01, 0x01, 0xa3, 0x46, 0x07, 0xff, 0xdf, 0x7f, 0xf7, 0xf7, 
	0xf6, 0xdb, 0x7d, 0xfb, 0xbf, 0x7c, 0x04, 0x58, 0x01, 0x60, 0x03, 0xef, 0x7f, 0xef, 0x7f, 0xde, 
	0xdf, 0xff, 0xdf, 0xde, 0xfd, 0xec, 0x00, 0x40, 0x5c, 0x10, 0x13, 0xbf, 0xfe, 0xff, 0xee, 0xff, 
	0xfb, 0x6d, 0xf6, 0xff, 0xff, 0xff, 0x81, 0x04, 0x93, 0x00, 0x0f, 0xff, 0xfb, 0xf6, 0xff, 0xfb, 
	0x6f, 0xff, 0x7f, 0xbb, 0xdb, 0xfb, 0x80, 0x36, 0xe4, 0xc0, 0x17, 0xfb, 0xef, 0xdf, 0xdd, 0xdf, 
	0xfd, 0xb7, 0xdb, 0xff, 0xff, 0xbf, 0x00, 0x00, 0x08, 0x80, 0x07, 0xbf, 0xbf, 0xfd, 0xff, 0xf7, 
	0xb7, 0xfd, 0xfe, 0xed, 0xbe, 0xff, 0xe0, 0x00, 0x0a, 0x40, 0x4b, 0xff, 0xfd, 0xbf, 0xbb, 0x7e, 
	0xfe, 0xdf, 0x6f, 0xff, 0xf7, 0xee, 0x02, 0x00, 0xa6, 0x40, 0x7b, 0x7b, 0x7f, 0xf7, 0xff, 0xfb, 
	0xdb, 0xf7, 0xfb, 0x77, 0x7d, 0xf0, 0x00, 0x00, 0x31, 0x80, 0x1f, 0xef, 0xf7, 0xfd, 0xee, 0xdf, 
	0x7f, 0x7d, 0xbf, 0xdf, 0xef, 0x00, 0x00, 0x12, 0x49, 0x00, 0x01, 0xff, 0xfe, 0xdf, 0x7b, 0xff, 
	0xed, 0xdf, 0xef, 0xfd, 0xa0, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x0d, 0xdf, 0xff, 0xdf, 0xbb, 
	0xbf, 0xf6, 0xfb, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xed, 0xfe, 0xfe, 
	0xf6, 0xff, 0xbf, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xbf, 0xbb, 0xef, 
	0xdf, 0xbb, 0xed, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xfb, 0xef, 0xbd, 
	0xfb, 0xee, 0xff, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0xfe, 0xf7, 
	0x6e, 0xff, 0xb7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xdf, 0xbb, 0xff, 
	0xff, 0xb7, 0xfd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 0xff, 0xbb, 
	0xb7, 0xfc, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xdd, 0xef, 
	0xfd, 0xdf, 0xf7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xdf, 0x77, 0x7d, 
	0xde, 0xdb, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xff, 0xff, 
	0x77, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xbd, 0xef, 
	0xfd, 0x66, 0xb6, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xef, 0xbb, 
	0xb7, 0xfe, 0xf7, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0xfb, 0xfe, 
	0xfe, 0xdb, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xbf, 0x77, 
	0xdb, 0xff, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xf7, 0xdf, 
	0x7f, 0x37, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xde, 0xfd, 
	0xed, 0xf9, 0xdc, 0x00, 0x00, 0x00, 0x05, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xff, 0xff, 
	0xbf, 0xcf, 0x78, 0x00, 0x02, 0xc4, 0x01, 0x1c, 0x00, 0x80, 0x00, 0x00, 0x00, 0x07, 0xfb, 0xdf, 
	0xf3, 0x7f, 0x6c, 0x20, 0x09, 0x20, 0x06, 0x20, 0xbc, 0x69, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 
	0x7f, 0x75, 0xe8, 0x0b, 0x00, 0x68, 0x0c, 0x08, 0x00, 0x03, 0x80, 0x00, 0x1f, 0x03, 0xff, 0xff, 
	0xcd, 0xdf, 0xb1, 0x81, 0x74, 0x1c, 0x00, 0x10, 0x00, 0x00, 0x40, 0x06, 0xf3, 0xc7, 0xff, 0xf6, 
	0xff, 0xfa, 0xf8, 0x74, 0x16, 0xd3, 0x00, 0x02, 0x60, 0x00, 0x0d, 0x81, 0x9c, 0x9f, 0xb6, 0xdf, 
	0xb6, 0xb7, 0xde, 0x0d, 0xc3, 0x76, 0x00, 0x00, 0x08, 0x00, 0xb2, 0x64, 0x66, 0xfe, 0xff, 0xfb, 
	0xfd, 0xed, 0xdf, 0x60, 0x79, 0x99, 0x80, 0x0c, 0x00, 0x00, 0x5b, 0x53, 0x6b, 0x3f, 0xed, 0xbc, 
	0xdf, 0x7f, 0x77, 0x0b, 0x86, 0x6e, 0xe8, 0x0a, 0x00, 0xc0, 0x4d, 0x92, 0x59, 0xbb, 0x6c, 0x97, 
	0xf7, 0xdb, 0xfd, 0xa0, 0xb6, 0x66, 0x6f, 0xe1, 0x2e, 0x63, 0xcc, 0xe4, 0xd6, 0xcd, 0xb7, 0xfe, 
	0xfd, 0xfe, 0xdf, 0x9f, 0x85, 0x11, 0x10, 0x3d, 0xa3, 0x21, 0xe6, 0x25, 0x96, 0x7f, 0xf7, 0x6f, 
	0xbe, 0xdf, 0xd2, 0x80, 0x69, 0xdd, 0xdf, 0x96, 0xd9, 0x90, 0x0b, 0x9b, 0x69, 0xb6, 0xdf, 0xfb, 
	0xe6, 0xd1, 0x7e, 0xa6, 0x4e, 0x66, 0xc9, 0xd2, 0x54, 0xc4, 0x08, 0xda, 0x6d, 0xbf, 0xfd, 0xfe, 
	0x7b, 0x3f, 0x67, 0x89, 0x92, 0x6a, 0x6c, 0x6d, 0x96, 0x20, 0x0c, 0xcd, 0x96, 0x7f, 0x7f, 0x6f, 
	0x9b, 0xe6, 0x99, 0x40, 0x23, 0x19, 0xb7, 0x29, 0x21, 0x00, 0x13, 0x24, 0x93, 0x3b, 0xef, 0xfb
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_profe
};



void setup() {
  // Iniciar la pantalla
  if(!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    Serial.begin(9600);
    Serial.println(F("No se encontró pantalla SSD1306"));
    for(;;); // se queda detenido
  }

  display.clearDisplay(); // Make sure the display is cleared
  // Draw the bitmap:
  // drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  display.drawBitmap(0, 0, epd_bitmap_profe, 128, 64, WHITE);

  // Update the display
  display.display();                // mostrar en pantalla
}

void loop() {
  // nada que hacer en loop
}
